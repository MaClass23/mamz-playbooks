apiVersion: apps/v1
kind: Deployment
metadata:
  name:  mamz-fierce
  namespace: default
  labels:
    app:  webapp
spec:
  selector:
    matchLabels:
      app: webapp
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  webapp
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  mamz-app
        image:  maclass23/nodeapp:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_status/healthz
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
          - ENV MONGO_INITDB_ROOT_USERNAME=mongo
          - ENV MONGO_INITDB_ROOT_PASSWORD=password 
          - ENV MONGO_INITDB_ROOT_HOSTNAME=mongodb
        ports:
        - containerPort:  3000
          name:  mamz-app
        volumeMounts:
        - name: /data/db
          mountPath: /data/db
      volumes:
        - name: /data/db
          hostPath:
            path: /var/lib/docker/volumes
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: webappsvc
  namespace: default
spec:
  selector:
    app: webapp
  type: NodePort
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: webappsvc
    protocol: TCP 
    port: 3000
    targetPort: 3000
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    nodePort: 31000
  env:
      - ENV MONGO_INITDB_ROOT_USERNAME=mongo
      - ENV MONGO_INITDB_ROOT_PASSWORD=password 
      - ENV MONGO_INITDB_ROOT_HOSTNAME=mongodb
      
